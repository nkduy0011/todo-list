{"version":3,"sources":["FontawaresomeLibrary.js","components/Todolist/AddItem.js","components/Todolist/ListItem.js","components/Todolist/CurrentItem.js","components/Todolist/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["library","add","faArrowLeft","faHome","faGift","faCloudUploadAlt","faCoffee","faCog","faChevronDown","faCircle","faCheckCircle","faTimes","AddItem","state","newitem","this","props","onAdd","onClick","checkAll","item","className","classNames","icon","type","placeholder","value","onChange","e","setState","setText","target","onKeyPress","text","key","active","onAddToDo","Component","ListItem","onDel","CurrentItem","Current","itemLeft","allItem","currentFilter","onDelComplated","map","index","CurrentState","Todolist","todo","toDoItem","onChangeCheck","onCurrentFilter","current","filterCheck","filter","checkall","onAllClick","bind","event","slice","activearr","i","length","includes","newToDo","onItemClick","onDelClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecf7e537.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faArrowLeft, faHome, faGift, faCloudUploadAlt, faCoffee, faCog, faChevronDown, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCircle, faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\n\r\nlibrary.add(\r\n    faArrowLeft,\r\n    faHome,\r\n    faGift,\r\n    faCloudUploadAlt,\r\n    faCoffee,\r\n    faCog,\r\n    faChevronDown,\r\n    faCircle,\r\n    faCheckCircle,\r\n    faTimes\r\n    );","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './AddItem.css';\r\nimport classNames from 'classnames/bind';\r\nclass AddItem extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            newitem :\"\"\r\n        }\r\n    }\r\n    render(){\r\n    const {onAdd, onClick, checkAll} = this.props;\r\n    const setText = (item) => {\r\n        this.setState({\r\n            newitem: item\r\n        })\r\n    }\r\n    const onAddToDo = (e = {}) => {\r\n        const text = this.state.newitem;\r\n        if (e.key === 'Enter' && text) {\r\n            onAdd({\r\n                item: text,\r\n                active: false\r\n            })\r\n            this.setState({\r\n                newitem: \"\"\r\n            })\r\n        }\r\n        \r\n    }\r\n    const item = this.state.newitem;\r\n    return(\r\n        <div className='AddItem'>\r\n            <div className={classNames(\"iconcheckAll\",{\"checkAllactive\":checkAll})}>\r\n                <FontAwesomeIcon className=\"icon-checkAll\" icon=\"chevron-down\" onClick={onClick}/>\r\n                </div>\r\n            <input className=\"item-add\"\r\n            type='text'\r\n            placeholder='Add new item'\r\n            value = {item}\r\n            onChange= {(e) => setText(e.target.value)}\r\n            onKeyPress= {(e) => onAddToDo(e)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n} \r\n\r\nAddItem.propTypes = {\r\n    onAdd: PropTypes.func,\r\n    onClick: PropTypes.func,\r\n    checkAll: PropTypes.bool\r\n}\r\n\r\nexport default AddItem","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './ListItem.css';\r\nimport classNames from 'classnames/bind';\r\nclass ListItem extends Component {\r\n    render(){\r\n        const { item, onClick ,onDel } = this.props;\r\n        return(\r\n            <div className='ListItem'>\r\n                <div>\r\n                    { !item.active && <FontAwesomeIcon className=\"icon-check\" icon={['far','circle']} onClick={onClick}/>}\r\n                    { item.active && <FontAwesomeIcon className=\"icon-checked\" icon={['far','check-circle']} onClick={onClick}/>}\r\n                    <div className={classNames(\"item\",{\"active\":item.active})} >{item.item}</div>\r\n                </div>\r\n                <FontAwesomeIcon className=\"icon-del\" icon=\"times\" onClick={onDel}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nListItem.propTypes = {\r\n    item: PropTypes.shape({\r\n        item: PropTypes.string.isRequired,\r\n        active: PropTypes.bool.isRequired\r\n    }),\r\n    onClick: PropTypes.func,\r\n    onDel: PropTypes.func\r\n}\r\n\r\nexport default ListItem","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './CurrentItem.css';\r\nimport classNames from 'classnames/bind';\r\nclass CurrentItem extends Component {\r\n    constructor(){\r\n        super()\r\n        this.Current = [\"All\", \"Active\", \"Complated\"]\r\n    }\r\n    render(){\r\n        const{itemLeft, allItem, currentFilter, onClick, onDelComplated}=this.props;\r\n        return(\r\n            <div className='CurrentItem'>\r\n                <div className=\"item-left\"><span>{itemLeft}</span> item left</div>\r\n                {this.Current.map((item, index) => \r\n                <CurrentState \r\n                currentFilter={currentFilter} \r\n                key={index} \r\n                text={item} \r\n                onClick={onClick}/>)}\r\n                {itemLeft < allItem &&< div className=\"bnt-clear-complated\" onClick={onDelComplated}>clear complated</div>} \r\n            </div>\r\n        );\r\n    }\r\n}\r\nCurrentItem.propTypes = {\r\n    itemLeft: PropTypes.number.isRequired,\r\n    allItem: PropTypes.number.isRequired,\r\n    currentFilter: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func,\r\n    onDelComplated: PropTypes.func\r\n}\r\nclass CurrentState extends Component {\r\n    render(){\r\n        const{text, currentFilter,onClick}=this.props;\r\n        const onCurrentClick = () =>{\r\n            onClick(text)\r\n        }\r\n        return(\r\n            <div className=\"current-state\">\r\n                    <div \r\n                    className={classNames(\"bnt-all\",{\"active\":text === currentFilter})}\r\n                    onClick={onCurrentClick}\r\n                    >{text}</div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nCurrentState.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    currentFilter: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default CurrentItem","import React, { Component } from 'react';\r\nimport AddItem from './AddItem';\r\nimport ListItem from './ListItem';\r\nimport CurrentItem from './CurrentItem';\r\nimport './Todolist.css';\r\nclass Todolist extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            currentFilter: \"All\",\r\n            toDoItem : [\r\n                {\r\n                    item: \"an\",\r\n                    active: false\r\n                },\r\n                {\r\n                    item: \"choi\",\r\n                    active: false\r\n                },\r\n                {\r\n                    item: \"ngu\",\r\n                    active: false\r\n                }\r\n            ],\r\n            checkall: false,\r\n            itemLeft: 3\r\n        }\r\n        this.onAllClick = this.onAllClick.bind(this)\r\n        this.onChangeCheck = this.onChangeCheck.bind(this)\r\n        this.onDelComplated = this.onDelComplated.bind(this)\r\n    }\r\n    onItemClick(item, index){\r\n        return (event) =>{\r\n            const { toDoItem } = this.state;\r\n            const active = item.active;\r\n            this.setState({\r\n                toDoItem: [\r\n                    ...toDoItem.slice(0,index),\r\n                    {\r\n                        ...item,\r\n                        active: !active\r\n                    },\r\n                    ...toDoItem.slice(index+1)\r\n                ],\r\n            }, () =>this.onChangeCheck())\r\n        }\r\n    }\r\n    onChangeCheck(){\r\n        const activearr = this.state.toDoItem.map(i => i.active);\r\n        const itemLeft = this.state.toDoItem.filter(active => !active.active);\r\n        this.setState({itemLeft: itemLeft.length})\r\n                if(!activearr.includes(false))\r\n                {\r\n                    this.setState({\r\n                        checkall : true\r\n                    })\r\n                }\r\n                else\r\n                this.setState({\r\n                    checkall : false\r\n                })\r\n    }\r\n    onDelClick(item, index){\r\n        return(event) =>{\r\n            const { toDoItem } = this.state;\r\n            this.setState({\r\n                toDoItem: [\r\n                    ...toDoItem.slice(0,index),\r\n                    ...toDoItem.slice(index+1)\r\n                ]\r\n            },() =>this.onChangeCheck())\r\n        }\r\n    }\r\n    onAllClick() { \r\n        const { toDoItem } = this.state;\r\n        toDoItem.map(i => i.active = true);\r\n        this.onChangeCheck()\r\n    }\r\n    onAdd = (todo = {}) => {\r\n        const { toDoItem } = this.state;\r\n        this.setState({\r\n            toDoItem :[\r\n                ...toDoItem,\r\n                {...todo}\r\n                \r\n            ]\r\n        },() =>this.onChangeCheck())\r\n    }\r\n    onCurrentFilter = (current) => {\r\n        if(current===\"All\")\r\n        {   \r\n            this.setState({\r\n            currentFilter: current\r\n            }); \r\n        }\r\n        else if(current===\"Active\")\r\n        {\r\n        this.setState({\r\n            currentFilter: current\r\n        });\r\n        }\r\n        else if(current===\"Complated\"){\r\n        this.setState({\r\n            currentFilter: current\r\n        });\r\n        }\r\n    }\r\n    filterCheck = (currentFilter) => {\r\n        const { toDoItem } = this.state;\r\n        if(currentFilter===\"All\")\r\n            return toDoItem;\r\n        else if(currentFilter===\"Active\")\r\n            return toDoItem.filter( active => !active.active);\r\n        else if(currentFilter===\"Complated\")\r\n            return toDoItem.filter( active => active.active);\r\n    }\r\n    onDelComplated(){\r\n        const {toDoItem} = this.state;\r\n        const newToDo = toDoItem.filter( active => !active.active);\r\n        this.setState({\r\n            toDoItem:[...newToDo]\r\n        })\r\n    }\r\n    render(){\r\n        const { checkall, itemLeft, currentFilter } = this.state;\r\n        const  toDoItem  = this.filterCheck(currentFilter);\r\n        const allItem = this.state.toDoItem.length;\r\n        return(\r\n            <div className='Todolist'>\r\n                <div className=\"title\">Todos</div>\r\n                <div className = 'TodoTable'>\r\n                    <AddItem onAdd={this.onAdd} onClick={this.onAllClick} checkAll={checkall}/>\r\n                    {   \r\n                        toDoItem.map( (item, index) => \r\n                        <ListItem item={ item }\r\n                         key={ index } \r\n                         onClick={this.onItemClick(item,index)}\r\n                         onChange={this.onChangeCheck} \r\n                         onDel={this.onDelClick(item,index)}\r\n                         />)                       \r\n                    }\r\n                    <CurrentItem \r\n                    itemLeft={itemLeft} \r\n                    allItem={allItem} \r\n                    currentFilter={currentFilter} \r\n                    onClick={this.onCurrentFilter}\r\n                    onDelComplated={this.onDelComplated}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todolist\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport './FontawaresomeLibrary';\nimport Todolist from './components/Todolist/Todolist'\n//import Menu from './components/Menu/Menu';\n// import LoginHeader from './components/Signin/LoginHeader';\n// import LoginForm from './components/Signin/LoginForm';\n//import Ex from './components/ex/ex';\n// import CompleteReport from './components/complete-report/CompleteReport'\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <Todolist/>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}